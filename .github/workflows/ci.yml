name: Build WinUI App

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    strategy:
      matrix:
        platform: [x86, x64]

    runs-on: windows-latest

    env:
      Solution_Name: "GTA Journal.sln"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore NuGet packages
        run: 'dotnet restore "GTA Journal.sln"'

      - name: Build the project
        run: 'dotnet build "GTA Journal/GTA Journal.csproj" -c Release -p:Platform=$env:Platform'
        env:
          Platform: ${{ matrix.platform }}

      - name: Build the updater
        run: 'dotnet build "GTA Journal Updater/GTA Journal Updater.csproj" -c Release -p:Platform=$env:Platform'
        env:
          Platform: ${{ matrix.platform }}

      - name: Publish the application
        run: 'dotnet publish "GTA Journal/GTA Journal.csproj" -c Release -p:Platform=$env:Platform --output ./output'
        env:
          Platform: ${{ matrix.platform }}

      - name: Compile .ISS to .EXE Installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.5
        with:
          path: setup.iss
          options: /O+

      - name: Collect app version
        run: |
          '.\getversion.ps1 >> >> $env:GITHUB_ENV'

      - name: Use captured output
        run: |
          echo "Captured version: $env:JOURNAL_VERSION"

      - name: Upload output artifacts
        uses: actions/upload-artifact@v4
        with:
          name: WinUI-App-Output (${{ matrix.platform }})
          path: ./output

      - name: Upload installer artifacts
        uses: actions/upload-artifact@v4
        with:
          name: WinUI-App-Installer (${{ matrix.platform }})
          path: ./GTAJournalInstaller.exe
