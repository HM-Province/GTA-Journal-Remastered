name: Build WinUI App

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

permissions:
  packages: write
  contents: write

jobs:
  build:
    strategy:
      matrix:
        platform: [x86, x64]

    runs-on: windows-latest

    env:
      Solution_Name: "GTA Journal.sln"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore NuGet packages
        run: 'dotnet restore "GTA Journal.sln"'

      - name: Build the project
        run: 'dotnet build "GTA Journal/GTA Journal.csproj" -c Release -p:Platform=$env:Platform'
        env:
          Platform: ${{ matrix.platform }}

      - name: Build the updater
        run: 'dotnet build "GTA Journal Updater/GTA Journal Updater.csproj" -c Release -p:Platform=$env:Platform'
        env:
          Platform: ${{ matrix.platform }}

      - name: Publish the application
        run: 'dotnet publish "GTA Journal/GTA Journal.csproj" -c Release -p:Platform=$env:Platform --output ./output'
        env:
          Platform: ${{ matrix.platform }}

      - name: Upload compiled app
        uses: actions/upload-artifact@v4
        with:
          name: App-Out-${{ matrix.platform }}
          retention-days: 1
          path: ./output

      # - name: Collect app version
      #   id: appversion
      #   run: |
      #     .\getversion.ps1 >> $GITHUB_OUTPUT

  publish-zip:
    needs: [build]

    strategy:
      matrix:
        platform: [x86, x64]

    runs-on: windows-latest

    steps:
      - name: Download builded app
        uses: actions/download-artifact@v4
        with:
          name: App-Out-${{ matrix.platform }}
          path: ./app

      - name: Compress app binaries
        env:
          Platform: ${{ matrix.platform }}
        run: |
          Compress-Archive -Path app\* -DestinationPath "GTA Journal ($env:Platform).zip" -CompressionLevel Optimal

      - name: Upload GitHub release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          tag_name: main-action-out
          files: GTA Journal (${{ matrix.platform }}).zip

  publish-installer:
    needs: [build]

    strategy:
      matrix:
        platform: [x86, x64]

    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download builded app
        uses: actions/download-artifact@v4
        with:
          name: App-Out-${{ matrix.platform }}
          path: ./app

      - name: Compile .ISS to .EXE Installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.5
        with:
          path: setup.iss
          options: /O+

      - name: Rename installer
        env:
          Platform: ${{ matrix.platform }}
        run: |
          Rename-Item "GTAJournalInstaller.exe" -NewName "Setup ($env:Platform).exe‚Äù

      - name: Upload GitHub release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          tag_name: main-action-out
          files: Setup (${{ matrix.platform }}).exe
